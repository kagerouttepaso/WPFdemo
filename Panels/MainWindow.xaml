<Window x:Class="Panels.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Panels"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <TabControl>
            <TabItem Header="Dock">
                <!--LastChildFillを有効にすると最後のコントロールがパネル全体を埋めるように最大化される-->
                <DockPanel LastChildFill="True">
                    <!--上から順にコントロールを敷き詰め-->
                    <!--コントロールは中央揃えになるように配置される-->
                    <TextBlock Text="Text" Height="20" />
                    <Button DockPanel.Dock="Left"
                            Content="Button Left" />
                    <Button DockPanel.Dock="Top"
                            Content="Button Top" />
                    <Button DockPanel.Dock="Right"
                            Content="Button Right" />
                    <Button DockPanel.Dock="Bottom"
                            Content="Button Bottom" />
                </DockPanel>
            </TabItem>
            <TabItem Header="Grig">
                <Grid>
                    <Grid.RowDefinitions>
                        <!--*付きのものはその比率になるように自動調整-->
                        <RowDefinition Height="1*" />
                        <!--最小サイズをていぎできる -->
                        <RowDefinition Height="1*" MinHeight="100" />
                        <RowDefinition Height="3*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <!--最小になる固定値-->
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                        <!--固定値-->
                        <ColumnDefinition Width="200" />
                    </Grid.ColumnDefinitions>
                    <!--上から順にコントロールを敷き詰め-->
                    <Button Grid.Row="0" Grid.Column="0"
                            Content="Button 1" />
                    <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                            Content="Button 2" />
                    <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="2"
                            Content="Button 3" />
                    <!--こういう書き方をするとコントロールがかぶってしまう-->
                    <Button Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
                            Content="Button 4" />
                </Grid>
            </TabItem>
            <TabItem Header="Stack">
                <!--パネルの上から順に高さが最小になるように並べるだけ。簡単だけど融通がきかない
                DockPanel LastChildFill="False"にしてDockPanel.Dock="Top"してるのと同じ
                -->
                <StackPanel>
                    <Button Content="Button 1" />
                    <Button Content="Button 2" />
                    <Button Content="Button 3" />
                    <Button Content="Button 4" />
                </StackPanel>
            </TabItem>
            <TabItem Header="Stack Holozontal">
                <!--StackPanelの横バージョン
                DockPanel LastChildFill="False"にしてDockPanel.Dock="Top"してるのと同じ
                -->
                <StackPanel  Orientation="Horizontal">
                    <Button Content="Button 1" />
                    <Button Content="Button 2" />
                    <Button Content="Button 3" />
                    <Button Content="Button 4" />
                </StackPanel>
            </TabItem>
            <TabItem Header="よくある">
                <Grid>
                    <!--スタイル定義 定義したコントロールより下でStaticResouceから参照可能-->
                    <Grid.Resources>
                        <!--x:Key スタイル名-->
                        <!--TargetType 対象のコントロール-->
                        <!--BaseOn ベースとなるスタイル {StaticResouce {x:Type ***}} でアプリケーションデフォルトのスタイルを取得できる-->
                        <Style x:Key="KeyTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Width" Value="130" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                        <Style x:Key="ValueTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Width" Value="100" />
                            <!--Textboxと書き出しを揃える-->
                            <Setter Property="Margin" Value="5,0,0,0" />
                        </Style>
                        <Style x:Key="ValueTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Width" Value="100" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                        </Style>
                        <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <!--ボタンの境界とボタンの文字列の隙間-->
                            <Setter Property="Padding" Value="20,10" />
                            <!--ボタンの境界と周りのコントロールの隙間-->
                            <Setter Property="Margin" Value="10,5" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Menu Grid.Row="0">
                        <MenuItem Header="ふぁいる">
                            <MenuItem Header="終了" />
                        </MenuItem>
                        <MenuItem Header="ツール" />
                    </Menu>
                    <Grid Grid.Row="1">
                        <GroupBox Header="グループ"
                                  Padding="10">
                            <DockPanel LastChildFill="False">
                                <!--上から順にパラメータを並べる-->
                                <!--パラメータはGridでKey、Valueの幅を決めるよりStackPannelを並べたほうが良い-->
                                <!--パラメータの追加削除をStackPanelのIsVisibleで制御できるため。GirdだとKeyとValueのコントロールが別れてしまう。-->
                                <StackPanel DockPanel.Dock="Top"
                                            Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource KeyTextBlockStyle}"
                                               Text="パラメータ" />
                                    <TextBlock Style="{StaticResource ValueTextBlockStyle}"
                                               Text="値" />
                                </StackPanel>
                                <StackPanel DockPanel.Dock="Top"
                                            Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource KeyTextBlockStyle}"
                                               Text="パラメータ" />
                                    <TextBlock Style="{StaticResource ValueTextBlockStyle}"
                                               Text="値" />
                                </StackPanel>
                                <StackPanel DockPanel.Dock="Top"
                                            Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource KeyTextBlockStyle}"
                                               Text="パラメータ" />
                                    <TextBox Style="{StaticResource ValueTextBoxStyle}"
                                             Text="値" />
                                </StackPanel>

                                <!--下にDockPanel-->
                                <DockPanel DockPanel.Dock="Bottom"
                                           LastChildFill="False">
                                    <!--右詰めでStackパネル = 右下に要素が横並びになる-->
                                    <StackPanel DockPanel.Dock="Right"
                                                Orientation="Horizontal">
                                        <Button Style="{StaticResource ButtonStyle}"
                                                        Content="ButtonA" />
                                        <Button Style="{StaticResource ButtonStyle}"
                                                        Content="ButtonB" />
                                    </StackPanel>
                                </DockPanel>
                                <!--2階建ても容易-->
                                <DockPanel DockPanel.Dock="Bottom"
                                           LastChildFill="False"
                                           Visibility="Hidden">
                                    <!--右詰めでStackパネル = 右下に要素が横並びになる-->
                                    <StackPanel DockPanel.Dock="Right"
                                                Orientation="Horizontal">
                                        <Button Style="{StaticResource ButtonStyle}"
                                                        Content="ButtonC" />
                                        <Button Style="{StaticResource ButtonStyle}"
                                                        Content="ButtonD" />
                                    </StackPanel>
                                </DockPanel>
                            </DockPanel>
                        </GroupBox>
                        <!--メインコンテンツ-->
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>